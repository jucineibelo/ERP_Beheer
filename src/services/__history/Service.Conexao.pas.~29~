unit Service.Conexao;

interface

uses
  System.SysUtils,
  System.Classes,
  FireDAC.Stan.Intf,
  FireDAC.Stan.Option,
  FireDAC.Stan.Error,
  FireDAC.UI.Intf,
  FireDAC.Phys.Intf,
  FireDAC.Stan.Def,
  FireDAC.Stan.Pool,
  FireDAC.Stan.Async,
  FireDAC.Phys,
  FireDAC.VCLUI.Wait,
  Data.DB,
  FireDAC.Comp.Client,
  FireDAC.Comp.UI,
  FireDAC.Phys.FBDef,
  FireDAC.Phys.IBBase,
  FireDAC.Phys.FB,
  Data.Win.ADODB,
  FireDAC.Stan.Param,
  FireDAC.DatS,
  FireDAC.DApt.Intf,
  FireDAC.DApt,
  FireDAC.Comp.DataSet,
  IniFiles;

type
  TServiceConexao = class(TDataModule)
    FDCon: TFDConnection;
    FDGUIxWaitCursor1: TFDGUIxWaitCursor;
    FDPhysFBDriverLink1: TFDPhysFBDriverLink;
    Qry_Filial: TFDQuery;
    Qry_FilialID: TIntegerField;
    Qry_FilialRAZAO: TStringField;
    Qry_FilialFANTASIA: TStringField;
    Qry_FilialCNPJ: TStringField;
    Qry_FilialTELEFONE: TStringField;
    procedure DataModuleCreate(Sender: TObject);
  private
    { Private declarations }
  public
    function caminhDoConfigTxt: string;
  end;

var
  ServiceConexao: TServiceConexao;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}
{$R *.dfm}
{ TServiceConexao }

function TServiceConexao.caminhDoConfigTxt: string;
var
  ini: Tinifile;
  path: string;
begin
  ini := Tinifile.Create(ExtractFilePath(ParamStr(0)) + '\Config.ini');
  path := ini.ReadString('BASE', 'BASE', 'ADM');
  result := path;
end;

procedure TServiceConexao.DataModuleCreate(Sender: TObject);
begin
  with FDCon do
  begin
    Close;
    Params.Values['DataBase'] := caminhDoConfigTxt;
    Open;
  end;

  // Carregar Filial

  with Qry_Filial do
  begin
    Close;
    Params[0].AsInteger := 1;
    Open();
  end;

end;

end.
